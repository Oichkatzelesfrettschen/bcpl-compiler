name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        bits: [64, 32, 16]
    steps:
    - uses: actions/checkout@v4
    - name: Install 32-bit deps
      if: ${{ matrix.bits == '32' }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y gcc-i686-linux-gnu
    - name: Install IA-16 cross-compiler
      if: ${{ matrix.bits == '16' }}
      run: |
        sudo apt-get update -y
        IA16_VER=$(curl -fsSL https://api.github.com/repos/tkchia/gcc-ia16/releases/latest \
                    | awk -F\" '/tag_name/{print $4; exit}')
        sudo curl -fsSL "https://github.com/tkchia/gcc-ia16/releases/download/${IA16_VER}/ia16-elf-gcc-linux64.tar.xz" \
          | sudo tar -C /opt -Jx
        echo "/opt/ia16-elf-gcc/bin" >> "$GITHUB_PATH"
    - name: Build
      run: |
        if [ "${{ matrix.bits }}" = "32" ]; then
          sh scripts/makeall.sh all BITS=32 CROSS_PREFIX=i686-linux-gnu-
        elif [ "${{ matrix.bits }}" = "16" ]; then
          sh scripts/makeall.sh all BITS=16 CROSS_PREFIX=ia16-elf-
        else
          sh scripts/makeall.sh all
        fi
    - name: Build Chicken Scheme port
      run: |
        if command -v csc >/dev/null 2>&1; then
          csc -o ports/chicken/bcplc-chicken ports/chicken/main.scm
        fi
    - name: Test utilities
      run: |
        if [ "${{ matrix.bits }}" = "32" ]; then
          make -C tools BC=../src/bcplc test
        elif [ "${{ matrix.bits }}" = "16" ]; then
          make -C tools BC=../src/bcplc test
        else
          make -C tools test
        fi
    - name: Build LLVM/INTCODE backend
      if: ${{ hashFiles('llvm/**') != '' || hashFiles('intcode/**') != '' }}
      run: |
        if [ -d llvm ]; then
          make -C llvm all
        fi
        if [ -d intcode ]; then
          make -C intcode all
        fi
    - name: Test LLVM/INTCODE backend
      if: ${{ hashFiles('llvm/**') != '' || hashFiles('intcode/**') != '' }}
      run: |
        if [ -d llvm ]; then
          make -C llvm test
        fi
        if [ -d intcode ]; then
          make -C intcode test
        fi

  cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure, build and install
      run: |
        cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/usr/local
        cmake --build build
        cmake --install build
    - name: Test utilities (CMake)
      run: make -C tools BC=build/src/bcplc test

