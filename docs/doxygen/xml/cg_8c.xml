<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="cg_8c" kind="file" language="C++">
    <compoundname>cg.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="oc_8h" local="yes">oc.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/cg.c</label>
        <link refid="cg_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>oc.h</label>
        <link refid="oc_8h"/>
      </node>
      <node id="2">
        <label>assert.h</label>
      </node>
      <node id="3">
        <label>ctype.h</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="cg_8c_1a6aa9342e04c8980caca9b807953febfd" prot="public" static="no">
        <name>SDSZ</name>
        <initializer>5000</initializer>
        <briefdescription>
<para>Word size configuration based on target architecture. </para>
        </briefdescription>
        <detaileddescription>
<para>These macros define the word size and shift values for different target architectures. The BITS preprocessor variable determines the target architecture at compile time.</para>
<para>Size of static data array for constant storage </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="64" column="9" bodyfile="src/cg.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a383172054f1e95fcaebed559c26dff3d" prot="public" static="no">
        <name>X_R</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Load stack entry types. </para>
        </briefdescription>
        <detaileddescription>
<para>These constants define the different types of values that can be stored on the load stack during code generation. Register value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="72" column="9" bodyfile="src/cg.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" prot="public" static="no">
        <name>X_P</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Parameter reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="73" column="9" bodyfile="src/cg.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1afc65e8a229eb1de0086ae2f620b9f96d" prot="public" static="no">
        <name>X_G</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Global variable reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="74" column="9" bodyfile="src/cg.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a48926cc43021b1ff1b5fcdf5550651de" prot="public" static="no">
        <name>X_L</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Local variable reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="75" column="9" bodyfile="src/cg.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1aea2975868b5e5bee069fca958f13dca9" prot="public" static="no">
        <name>X_N</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Numeric constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="76" column="9" bodyfile="src/cg.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" prot="public" static="no">
        <name>X_LP</name>
        <initializer>5</initializer>
        <briefdescription>
<para>Parameter pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="77" column="9" bodyfile="src/cg.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" prot="public" static="no">
        <name>X_LG</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Global pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="78" column="9" bodyfile="src/cg.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" prot="public" static="no">
        <name>X_LL</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Local pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="79" column="9" bodyfile="src/cg.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" prot="public" static="no">
        <name>X_MOV</name>
        <initializer>0</initializer>
        <briefdescription>
<para>x86 instruction opcodes used in instruction template table </para>
        </briefdescription>
        <detaileddescription>
<para>These constants map to entries in the instruction template table and represent different x86 assembly instructions. Move instruction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="87" column="9" bodyfile="src/cg.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1aeafe4bc22aabd73aacdc9d476d7dfc73" prot="public" static="no">
        <name>X_LEA</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Load effective address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="88" column="9" bodyfile="src/cg.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1abe64a2f2baec92df0ff56d9d8a832ac5" prot="public" static="no">
        <name>X_JMP</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Jump instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="89" column="9" bodyfile="src/cg.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1af3e63f75092628b5f72bd834f1f964cd" prot="public" static="no">
        <name>X_CALL</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Call instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="90" column="9" bodyfile="src/cg.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a26c56fdacb2c5f01881e10448d323ba4" prot="public" static="no">
        <name>X_IMUL</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Integer multiply. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="91" column="9" bodyfile="src/cg.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1ab1b013b58eab59c32efa97173bfba6dc" prot="public" static="no">
        <name>X_IDIV</name>
        <initializer>5</initializer>
        <briefdescription>
<para>Integer divide. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="92" column="9" bodyfile="src/cg.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a9eeb57758ebcdbf47d85d43e12ba76a0" prot="public" static="no">
        <name>X_SUB</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Subtract instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="93" column="9" bodyfile="src/cg.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1ab4db4524dbf17972053e0e61ed5eeaf4" prot="public" static="no">
        <name>X_CMP</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Compare instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="94" column="9" bodyfile="src/cg.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1aa37b882caee86b0f5ec491fd15b9ba70" prot="public" static="no">
        <name>X_ADD</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Add instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="95" column="9" bodyfile="src/cg.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a7ed1ddf32a657f0328587b276fc4a043" prot="public" static="no">
        <name>X_NEG</name>
        <initializer>9</initializer>
        <briefdescription>
<para>Negate instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="96" column="9" bodyfile="src/cg.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1ab8fe5ea6714563d90738318052ca5b62" prot="public" static="no">
        <name>X_NOT</name>
        <initializer>10</initializer>
        <briefdescription>
<para>Bitwise NOT instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="97" column="9" bodyfile="src/cg.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a54a95c2322f757d51b2abc6adac695ac" prot="public" static="no">
        <name>X_AND</name>
        <initializer>11</initializer>
        <briefdescription>
<para>Bitwise AND instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="98" column="9" bodyfile="src/cg.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a91c2585f971ab42f4e989cfd0d91d4a2" prot="public" static="no">
        <name>X_OR</name>
        <initializer>12</initializer>
        <briefdescription>
<para>Bitwise OR instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="99" column="9" bodyfile="src/cg.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a31d9eaa243153a094aec0ade93c84a7c" prot="public" static="no">
        <name>X_XOR</name>
        <initializer>13</initializer>
        <briefdescription>
<para>Bitwise XOR instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="100" column="9" bodyfile="src/cg.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" prot="public" static="no">
        <name>XCJ</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Special instruction attributes for the instruction table. </para>
        </briefdescription>
        <detaileddescription>
<para>These constants are used as flags in the instruction attribute table to indicate special properties of x86 instructions. Call/jump instruction flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="108" column="9" bodyfile="src/cg.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" prot="public" static="no">
        <name>XI1</name>
        <initializer>4</initializer>
        <briefdescription>
<para>EAX register assumed flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="109" column="9" bodyfile="src/cg.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cg_8c_1a40049f5c914c456a58240b7a09f04853" prot="public" static="no">
        <name>XNA</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Attribute mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="110" column="9" bodyfile="src/cg.c" bodystart="110" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="cg_8c_1a2a2ea7ed355dba3501d63e7f63227149" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const xistr[]</definition>
        <argsstring>[]</argsstring>
        <name>xistr</name>
        <initializer>=
{



    &quot;movl&quot;, &quot;leal&quot;, &quot;jmpl&quot;, &quot;calll&quot;, &quot;imull&quot;, &quot;idivl&quot;, &quot;subl&quot;,

    &quot;cmpl&quot;, &quot;addl&quot;, &quot;negl&quot;, &quot;notl&quot;, &quot;andl&quot;, &quot;orl&quot;, &quot;xorl&quot;
}</initializer>
        <briefdescription>
<para>x86 instruction mnemonic strings </para>
        </briefdescription>
        <detaileddescription>
<para>This array contains the assembly mnemonics for x86 instructions, indexed by the X_* constants defined above. Different mnemonics are used based on the target architecture (64-bit vs 32-bit). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="119" column="25" bodyfile="src/cg.c" bodystart="119" bodyend="127"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a8e6479a37acf53f5674fcdd0e7367a0e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int xitab[]</definition>
        <argsstring>[]</argsstring>
        <name>xitab</name>
        <initializer>=
{
    2, 2, <ref refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" kindref="member">XCJ</ref> | 1, <ref refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" kindref="member">XCJ</ref> | 1, <ref refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" kindref="member">XI1</ref> | 2, <ref refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" kindref="member">XI1</ref> | 2, 2,
    2, 2, 1, 1, 2, 2, 2
}</initializer>
        <briefdescription>
<para>x86 instruction attribute table </para>
        </briefdescription>
        <detaileddescription>
<para>This table contains attributes for each x86 instruction, including the number of operands and special flags for register usage and instruction type (call/jump vs regular instructions). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="136" column="18" bodyfile="src/cg.c" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a82052e9f99a96a2fe1ae7215e4ce2b6f" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const reg[]</definition>
        <argsstring>[]</argsstring>
        <name>reg</name>
        <initializer>=
{
    &quot;eax&quot;, &quot;ecx&quot;
}</initializer>
        <briefdescription>
<para>Machine register names. </para>
        </briefdescription>
        <detaileddescription>
<para>Array of register names used for code generation. The code generator primarily uses EAX and ECX registers for computations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="148" column="25" bodyfile="src/cg.c" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1ad91e45c32f89b77fd01b45604e752341" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* relstr[][2]</definition>
        <argsstring>[][2]</argsstring>
        <name>relstr</name>
        <initializer>=
{
    {&quot;ne&quot;, &quot;e&quot;},    
    {&quot;e&quot;, &quot;ne&quot;},    
    {&quot;ge&quot;, &quot;l&quot;},    
    {&quot;le&quot;, &quot;g&quot;},    
    {&quot;g&quot;, &quot;le&quot;},    
    {&quot;l&quot;, &quot;ge&quot;}     
}</initializer>
        <briefdescription>
<para>Relational operator condition codes. </para>
        </briefdescription>
        <detaileddescription>
<para>This 2D array maps BCPL relational operators to x86 condition codes. Each entry contains the condition code and its negation for efficient implementation of both true and false branches. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="160" column="19" bodyfile="src/cg.c" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int sdata[SDSZ][2]</definition>
        <argsstring>[SDSZ][2]</argsstring>
        <name>sdata</name>
        <briefdescription>
<para>Global state variables for code generation. </para>
        </briefdescription>
        <detaileddescription>
<para>These variables maintain the state of the code generator across OCODE instruction processing. Static data array for constants </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="176" column="12" bodyfile="src/cg.c" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a8e935675ee83a2516c575de3e892b12e" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int dt</definition>
        <argsstring></argsstring>
        <name>dt</name>
        <briefdescription>
<para>Data table pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="177" column="12" bodyfile="src/cg.c" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int sp</definition>
        <argsstring></argsstring>
        <name>sp</name>
        <briefdescription>
<para>Stack pointer offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="178" column="12" bodyfile="src/cg.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a99f341304834c60324b5add106416b9e" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ltype[2]</definition>
        <argsstring>[2]</argsstring>
        <name>ltype</name>
        <briefdescription>
<para>Load stack: entry types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="179" column="12" bodyfile="src/cg.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ldata[2]</definition>
        <argsstring>[2]</argsstring>
        <name>ldata</name>
        <briefdescription>
<para>Load stack: entry data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="180" column="12" bodyfile="src/cg.c" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int lp</definition>
        <argsstring></argsstring>
        <name>lp</name>
        <briefdescription>
<para>Load stack pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="181" column="12" bodyfile="src/cg.c" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int labno</definition>
        <argsstring></argsstring>
        <name>labno</name>
        <briefdescription>
<para>Label counter for unique labels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="182" column="12" bodyfile="src/cg.c" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1ad6861c9d91887cb2618496f9e6ef1600" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int loff</definition>
        <argsstring></argsstring>
        <name>loff</name>
        <briefdescription>
<para>Label offset for relative addressing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="183" column="12" bodyfile="src/cg.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cg_8c_1a30df446d01f80e4211b2fcef8f754436" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ch</definition>
        <argsstring></argsstring>
        <name>ch</name>
        <briefdescription>
<para>Last character read from input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="184" column="12" bodyfile="src/cg.c" bodystart="184" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="cg_8c_1aed37d91fffbbe43a687accb7be6dce9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2" kindref="member">ocode_op</ref></type>
        <definition>static ocode_op gencode</definition>
        <argsstring>(void)</argsstring>
        <name>gencode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function prototypes for code generation. </para>
        </briefdescription>
        <detaileddescription>
<para>These functions implement the core code generation functionality, from OCODE processing to x86 assembly output.</para>
<para>Main code generation function <simplesect kind="return"><para>The current OCODE operation being processed</para>
</simplesect>
Processes OCODE instructions and generates corresponding x86 assembly. This is the main entry point for the code generation phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="368" column="17" bodyfile="src/cg.c" bodystart="368" bodyend="728" declfile="src/cg.c" declline="200" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void load</definition>
        <argsstring>(int type, int data)</argsstring>
        <name>load</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a value onto the load stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of value being loaded (X_R, X_P, X_G, etc.) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data associated with the value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Pushes a value onto the load stack for later code generation. The load stack tracks values that will be used in subsequent operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="730" column="13" bodyfile="src/cg.c" bodystart="730" bodyend="738" declfile="src/cg.c" declline="210" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1acf58c67442fc1637dc709535437c487e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void save</definition>
        <argsstring>(int type, int data)</argsstring>
        <name>save</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Save the top of load stack to a location. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination type (X_P, X_G, X_L, etc.) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination data (offset, global number, etc.)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Generates code to store the top load stack entry to the specified location. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="740" column="13" bodyfile="src/cg.c" bodystart="740" bodyend="743" declfile="src/cg.c" declline="219" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1af21ecd62042167181d3471b14db0b404" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void force</definition>
        <argsstring>(int entry)</argsstring>
        <name>force</name>
        <param>
          <type>int</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Force a load stack entry into a register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The load stack entry index to force</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Generates code to ensure the specified load stack entry is in a register, loading it if necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="745" column="13" bodyfile="src/cg.c" bodystart="745" bodyend="780" declfile="src/cg.c" declline="228" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void loadreg</definition>
        <argsstring>(int reg_idx, int src_idx)</argsstring>
        <name>loadreg</name>
        <param>
          <type>int</type>
          <declname>reg_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_idx</declname>
        </param>
        <briefdescription>
<para>Load a value into a specific register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The register index to load into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The load stack entry to load from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Generates code to load a load stack entry into the specified register. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="782" column="13" bodyfile="src/cg.c" bodystart="782" bodyend="799" declfile="src/cg.c" declline="237" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void codex</definition>
        <argsstring>(int opcode)</argsstring>
        <name>codex</name>
        <param>
          <type>int</type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
<para>Generate a generic x86 instruction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>The x86 instruction opcode (X_MOV, X_ADD, etc.)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Generates an x86 instruction using the values on the load stack. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="801" column="13" bodyfile="src/cg.c" bodystart="801" bodyend="804" declfile="src/cg.c" declline="245" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a264145a676c969ab970618081c7ccb9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void code</definition>
        <argsstring>(int opcode,...)</argsstring>
        <name>code</name>
        <param>
          <type>int</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Generate an x86 instruction with operands. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>The x86 instruction opcode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable arguments for instruction operands</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Generates an x86 instruction with the specified operands. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="806" column="13" bodyfile="src/cg.c" bodystart="806" bodyend="886" declfile="src/cg.c" declline="254" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void defdata</definition>
        <argsstring>(int op, int data)</argsstring>
        <name>defdata</name>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Define static data entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The OCODE operation type (S_ITEML, S_ITEMN) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data value to store</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Adds an entry to the static data table for later output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="888" column="13" bodyfile="src/cg.c" bodystart="888" bodyend="896" declfile="src/cg.c" declline="263" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1ae8a4c6c633c5aeee881b57edb23ab28f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void outdata</definition>
        <argsstring>(int op, int data)</argsstring>
        <name>outdata</name>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Output static data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The OCODE operation type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Immediately outputs a data definition to the assembly output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="898" column="13" bodyfile="src/cg.c" bodystart="898" bodyend="916" declfile="src/cg.c" declline="272" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void codelab</definition>
        <argsstring>(int lab)</argsstring>
        <name>codelab</name>
        <param>
          <type>int</type>
          <declname>lab</declname>
        </param>
        <briefdescription>
<para>Generate a code label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lab</parametername>
</parameternamelist>
<parameterdescription>
<para>The label number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Outputs a label definition to the assembly output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="918" column="13" bodyfile="src/cg.c" bodystart="918" bodyend="926" declfile="src/cg.c" declline="280" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>emit</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Emit assembly code with printf-style formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Outputs formatted assembly code with proper indentation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="928" column="13" bodyfile="src/cg.c" bodystart="928" bodyend="942" declfile="src/cg.c" declline="289" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1aa1db0407d62c466c598725e94beb36b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * label</definition>
        <argsstring>(int lab)</argsstring>
        <name>label</name>
        <param>
          <type>int</type>
          <declname>lab</declname>
        </param>
        <briefdescription>
<para>Generate a unique label string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lab</parametername>
</parameternamelist>
<parameterdescription>
<para>The label number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A formatted label string</para>
</simplesect>
Creates a unique label string for use in assembly output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="944" column="13" bodyfile="src/cg.c" bodystart="944" bodyend="952" declfile="src/cg.c" declline="298" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1ad66edc94795805afe11b7bd121cd5697" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int rdop</definition>
        <argsstring>(int expected)</argsstring>
        <name>rdop</name>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
<para>Read an OCODE operation with validation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected operation code (-1 for any) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The operation code read</para>
</simplesect>
Reads and validates an OCODE operation from the input stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="954" column="12" bodyfile="src/cg.c" bodystart="954" bodyend="963" declfile="src/cg.c" declline="307" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int rdn</definition>
        <argsstring>(void)</argsstring>
        <name>rdn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read a numeric value from input. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The numeric value read</para>
</simplesect>
Reads a decimal number from the OCODE input stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="965" column="12" bodyfile="src/cg.c" bodystart="965" bodyend="988" declfile="src/cg.c" declline="315" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void error</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>error</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Report a fatal error and exit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Reports a fatal error to stderr and terminates the program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="990" column="14" bodyfile="src/cg.c" bodystart="990" bodyend="999" declfile="src/cg.c" declline="324" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void buf_append</definition>
        <argsstring>(char **sp, size_t *rem, const char *fmt,...)</argsstring>
        <name>buf_append</name>
        <param>
          <type>char **</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Helper function to append formatted data to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to current position in buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to remaining space in buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format string for data to append </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for the format string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Safely appends formatted data to a buffer while tracking remaining space. Aborts with an error if the buffer would overflow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="336" column="13" bodyfile="src/cg.c" bodystart="336" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="cg_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cg.c" line="354" column="5" bodyfile="src/cg.c" bodystart="354" bodyend="366"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>BCPL compiler backend: x86 assembly code generator from OCODE. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Robert Nordier </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2012 Robert Nordier. All rights reserved.</para>
</simplesect>
This file implements the primary code generation backend for the BCPL compiler. It translates OCODE (intermediate representation) into x86 assembly language. The generator supports multiple target architectures (16-bit, 32-bit, and 64-bit) and produces GNU assembler-compatible output.</para>
<sect1 id="cg_8c_1autotoc_md2_1s1"><sect2 id="cg_8c_1autotoc_md2">
<title>Architecture Support</title><para><itemizedlist>
<listitem><para><bold>x86-16</bold>: 16-bit Intel 8086 compatible code</para>
</listitem><listitem><para><bold>x86-32</bold>: 32-bit Intel 386+ compatible code <linebreak/>
</para>
</listitem><listitem><para><bold>x86-64</bold>: 64-bit AMD64/Intel 64 compatible code</para>
</listitem></itemizedlist>
</para>
</sect2></sect1>
<sect1 id="cg_8c_1autotoc_md3_1s1"><sect2 id="cg_8c_1autotoc_md3">
<title>Code Generation Strategy</title><para>The generator uses a stack-based approach with load stack tracking to optimize register usage and minimize memory accesses. It implements various optimization techniques including:<itemizedlist>
<listitem><para>Register allocation for frequently used values</para>
</listitem><listitem><para>Dead code elimination for unused stack entries</para>
</listitem><listitem><para>Peephole optimizations for common instruction patterns</para>
</listitem></itemizedlist>
</para>
</sect2></sect1>
<sect1 id="cg_8c_1autotoc_md4_1s1"><sect2 id="cg_8c_1autotoc_md4">
<title>OCODE Processing</title><para>The generator reads OCODE instructions from stdin and produces assembly code to stdout. Each OCODE instruction is processed sequentially with context maintained through the load stack and various state variables. </para>
</sect2></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Robert<sp/>Nordier.<sp/>All<sp/>rights<sp/>reserved.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BCPL<sp/>compiler<sp/>backend:<sp/>generate<sp/>x86<sp/>assembler<sp/>from<sp/>OCODE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="oc_8h" kindref="compound">oc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORDSZ<sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORD_SHIFT<sp/>3<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BITS==32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORDSZ<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORD_SHIFT<sp/>2<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BITS==16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORDSZ<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WORD_SHIFT<sp/>1<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>&quot;Unsupported<sp/>BITS<sp/>value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="cg_8c_1a6aa9342e04c8980caca9b807953febfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDSZ<sp/><sp/><sp/><sp/>5000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_R<sp/><sp/>0<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_P<sp/><sp/>1<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="cg_8c_1afc65e8a229eb1de0086ae2f620b9f96d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_G<sp/><sp/>2<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="cg_8c_1a48926cc43021b1ff1b5fcdf5550651de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_L<sp/><sp/>3<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_N<sp/><sp/>4<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_LP<sp/>5<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_LG<sp/>6<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_LL<sp/>7<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_MOV<sp/><sp/>0<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="cg_8c_1aeafe4bc22aabd73aacdc9d476d7dfc73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_LEA<sp/><sp/>1<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="cg_8c_1abe64a2f2baec92df0ff56d9d8a832ac5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_JMP<sp/><sp/>2<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="cg_8c_1af3e63f75092628b5f72bd834f1f964cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_CALL<sp/>3<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="cg_8c_1a26c56fdacb2c5f01881e10448d323ba4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_IMUL<sp/>4<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="cg_8c_1ab1b013b58eab59c32efa97173bfba6dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_IDIV<sp/>5<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="cg_8c_1a9eeb57758ebcdbf47d85d43e12ba76a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_SUB<sp/><sp/>6<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="cg_8c_1ab4db4524dbf17972053e0e61ed5eeaf4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_CMP<sp/><sp/>7<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="cg_8c_1aa37b882caee86b0f5ec491fd15b9ba70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_ADD<sp/><sp/>8<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="cg_8c_1a7ed1ddf32a657f0328587b276fc4a043" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_NEG<sp/><sp/>9<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="cg_8c_1ab8fe5ea6714563d90738318052ca5b62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_NOT<sp/><sp/>10<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="cg_8c_1a54a95c2322f757d51b2abc6adac695ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_AND<sp/><sp/>11<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="cg_8c_1a91c2585f971ab42f4e989cfd0d91d4a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_OR<sp/><sp/><sp/>12<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="cg_8c_1a31d9eaa243153a094aec0ade93c84a7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X_XOR<sp/><sp/>13<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XCJ<sp/>8<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XI1<sp/>4<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="cg_8c_1a40049f5c914c456a58240b7a09f04853" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XNA<sp/>3<sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="cg_8c_1a2a2ea7ed355dba3501d63e7f63227149" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a2a2ea7ed355dba3501d63e7f63227149" kindref="member">xistr</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;movl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;leal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jmp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;call&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;imull&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;idivl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subl&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;movl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;leal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jmpl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;calll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;imull&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;idivl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subl&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cmpl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;addl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;negl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;notl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;andl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;orl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xorl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="cg_8c_1a8e6479a37acf53f5674fcdd0e7367a0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a8e6479a37acf53f5674fcdd0e7367a0e" kindref="member">xitab</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/><ref refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" kindref="member">XCJ</ref><sp/>|<sp/>1,<sp/><ref refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" kindref="member">XCJ</ref><sp/>|<sp/>1,<sp/><ref refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" kindref="member">XI1</ref><sp/>|<sp/>2,<sp/><ref refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" kindref="member">XI1</ref><sp/>|<sp/>2,<sp/>2,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/>2,<sp/>1,<sp/>1,<sp/>2,<sp/>2,<sp/>2</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="cg_8c_1a82052e9f99a96a2fe1ae7215e4ce2b6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a82052e9f99a96a2fe1ae7215e4ce2b6f" kindref="member">reg</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;eax&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ecx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="cg_8c_1ad91e45c32f89b77fd01b45604e752341" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cg_8c_1ad91e45c32f89b77fd01b45604e752341" kindref="member">relstr</ref>[][2]<sp/>=</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ne&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ne&quot;</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;le&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;le&quot;</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" kindref="member">sdata</ref>[<ref refid="cg_8c_1a6aa9342e04c8980caca9b807953febfd" kindref="member">SDSZ</ref>][2];<sp/></highlight></codeline>
<codeline lineno="177" refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="cg_8c_1a99f341304834c60324b5add106416b9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" kindref="member">labno</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183" refid="cg_8c_1ad6861c9d91887cb2618496f9e6ef1600" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ad6861c9d91887cb2618496f9e6ef1600" kindref="member">loff</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184" refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2" kindref="member">ocode_op</ref><sp/><ref refid="cg_8c_1aed37d91fffbbe43a687accb7be6dce9f" kindref="member">gencode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1acf58c67442fc1637dc709535437c487e" kindref="member">save</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1af21ecd62042167181d3471b14db0b404" kindref="member">force</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" kindref="member">loadreg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_idx);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opcode);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opcode,<sp/>...);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ae8a4c6c633c5aeee881b57edb23ab28f" kindref="member">outdata</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" kindref="member">codelab</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lab);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lab);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ad66edc94795805afe11b7bd121cd5697" kindref="member">rdop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">[[noreturn]]<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*rem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*rem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;instruction<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>vsnprintf(*<ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref>,<sp/>*rem,<sp/>fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)n<sp/>&gt;=<sp/>*rem)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;instruction<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>*rem<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="cg_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2" kindref="member">ocode_op</ref><sp/>op;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" kindref="member">labno</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/><ref refid="cg_8c_1aed37d91fffbbe43a687accb7be6dce9f" kindref="member">gencode</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1ad6861c9d91887cb2618496f9e6ef1600" kindref="member">loff</ref><sp/>+=<sp/>1000;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(op<sp/>!=<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a38165d93da431da6482d755a4b65fc4f" kindref="member">S_END</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="cg_8c_1aed37d91fffbbe43a687accb7be6dce9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2" kindref="member">ocode_op</ref><sp/><ref refid="cg_8c_1aed37d91fffbbe43a687accb7be6dce9f" kindref="member">gencode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ro;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rcode,<sp/>s1,<sp/>s2,<sp/>s3,<sp/>sn;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2" kindref="member">ocode_op</ref><sp/>op;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref><sp/>=<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>=<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>=<sp/>rcode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>ro<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/><ref refid="cg_8c_1ad66edc94795805afe11b7bd121cd5697" kindref="member">rdop</ref>(0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a38165d93da431da6482d755a4b65fc4f" kindref="member">S_END</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>&lt;<sp/>0<sp/>||<sp/>op<sp/>&gt;<sp/><ref refid="oc_8h_1a051edd0275ace34838a250db05c85be5a7b9f8b8a0de2cfa508bb3bb675f939d0" kindref="member">OPMAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>op<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>op);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/><ref refid="oc_8h_1a2403e8776cbd43a13244753094b78112" kindref="member">optab1</ref>(op);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/><ref refid="oc_8h_1abd69503dfd1468d60a7997507c9f777d" kindref="member">optab2</ref>(op);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/><ref refid="oc_8h_1aa2207628d097838e402d670583e15418" kindref="member">optab3</ref>(op);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>&lt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af21ecd62042167181d3471b14db0b404" kindref="member">force</ref>(s1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" kindref="member">loadreg</ref>(0,<sp/>s3<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>s3<sp/>==<sp/>2<sp/>?<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>!=<sp/><ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref><sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" kindref="member">loadreg</ref>(1,<sp/>s3<sp/>==<sp/>4<sp/>?<sp/>0<sp/>:<sp/>s3<sp/>==<sp/>5<sp/>?<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[1]<sp/>==<sp/><ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref><sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa691425faf78380c94bea0165b400627" kindref="member">S_LN</ref>:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a634340f260a88ae2889c4cf0502cc08b" kindref="member">S_TRUE</ref>:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a68f36740ce22fa7b0a5500578751c4df" kindref="member">S_FALSE</ref>:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa6fca1794f1375f63a7578ebebb33624" kindref="member">S_LP</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a680a504bc6909b07fc1cdbacb15c9ca5" kindref="member">S_LG</ref>:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1afc65e8a229eb1de0086ae2f620b9f96d" kindref="member">X_G</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a3c180b1dfe97df28a52065ab2bc119d3" kindref="member">S_LL</ref>:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1a48926cc43021b1ff1b5fcdf5550651de" kindref="member">X_L</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a7c84abef1a8b83513700f9951dd75838" kindref="member">S_LLP</ref>:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" kindref="member">X_LP</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a3ba41710113e01b556a4ce9a7726e894" kindref="member">S_LLG</ref>:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" kindref="member">X_LG</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a5e603d85ebc292a128d18b76f752f717" kindref="member">S_LLL</ref>:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" kindref="member">X_LL</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a6134c07aec3c25b810423fe882ec35ed" kindref="member">S_QUERY</ref>:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>,<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac29d80754ddd534a99ab4fb1fea02393" kindref="member">S_LSTR</ref>:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>l,<sp/>i;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>--<ref refid="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" kindref="member">labno</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a19939ebe56152ac25b56f7ec3f124d83" kindref="member">S_DATALAB</ref>,<sp/>l);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac29d80754ddd534a99ab4fb1fea02393" kindref="member">S_LSTR</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac29d80754ddd534a99ab4fb1fea02393" kindref="member">S_LSTR</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(<ref refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" kindref="member">X_LL</ref>,<sp/>l);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a97ba549e605c21a54f220cf80da3143f" kindref="member">S_SP</ref>:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1acf58c67442fc1637dc709535437c487e" kindref="member">save</ref>(<ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a1012b32ebc27518c152db503d3aebbbf" kindref="member">S_SG</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1acf58c67442fc1637dc709535437c487e" kindref="member">save</ref>(<ref refid="cg_8c_1afc65e8a229eb1de0086ae2f620b9f96d" kindref="member">X_G</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac58ce269340e5667c8f98ec14742a5bb" kindref="member">S_SL</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1acf58c67442fc1637dc709535437c487e" kindref="member">save</ref>(<ref refid="cg_8c_1a48926cc43021b1ff1b5fcdf5550651de" kindref="member">X_L</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac2f6981b229c21af11bb782949906459" kindref="member">S_ENTRY</ref>:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>l,<sp/>i;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;//\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" kindref="member">codelab</ref>(l);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;pop<sp/>(%%rcx)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%rbp,%d(%%rcx)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%rcx,%%rbp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;pop<sp/>(%%ecx)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%ebp,%d(%%ecx)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%ecx,%%ebp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2af3cef75e455b219dd12e685c4adb987c" kindref="member">S_ENDPROC</ref>:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2acbb1fbbb0b04d18a572d51c86f4171a4" kindref="member">S_SAVE</ref>:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a6b42c9f855452714873f637c7b4a9d24" kindref="member">S_STACK</ref>:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa4970f4da86922cead96193a2c78333f" kindref="member">S_STORE</ref>:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a9911548c6defff3dfabde126245dbfb1" kindref="member">S_RV</ref>:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>(,%%rax,%d),%%eax&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>(,%%eax,%d),%%eax&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a1c4f9325b9f19bf8d3b16a738cfaa173" kindref="member">S_ABS</ref>:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;test<sp/>%%eax,%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jns<sp/>1f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;neg<sp/>%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;1:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aab5e0b881d0fc5a78ae7dfbf455e42f1" kindref="member">S_NEG</ref>:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2af48ddd6122fa1c3452214914dc57bcb9" kindref="member">S_NOT</ref>:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aab5e0b881d0fc5a78ae7dfbf455e42f1" kindref="member">S_NEG</ref><sp/>?<sp/><ref refid="cg_8c_1a7ed1ddf32a657f0328587b276fc4a043" kindref="member">X_NEG</ref><sp/>:<sp/><ref refid="cg_8c_1ab8fe5ea6714563d90738318052ca5b62" kindref="member">X_NOT</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ab9e7ffe62eebebec72c08e8b9996c70a" kindref="member">S_MULT</ref>:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae15c297f19edcc0536fbcc294c8c572a" kindref="member">S_DIV</ref>:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a17b321e52dd2aeb1a47409921a84a3fe" kindref="member">S_REM</ref>:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae15c297f19edcc0536fbcc294c8c572a" kindref="member">S_DIV</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a17b321e52dd2aeb1a47409921a84a3fe" kindref="member">S_REM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;cqto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;cltd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ab9e7ffe62eebebec72c08e8b9996c70a" kindref="member">S_MULT</ref><sp/>?<sp/><ref refid="cg_8c_1a26c56fdacb2c5f01881e10448d323ba4" kindref="member">X_IMUL</ref><sp/>:<sp/><ref refid="cg_8c_1ab1b013b58eab59c32efa97173bfba6dc" kindref="member">X_IDIV</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a17b321e52dd2aeb1a47409921a84a3fe" kindref="member">S_REM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%edx,%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2acee792d8135868160e57a6d3286eea45" kindref="member">S_PLUS</ref>:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa32610e28caffb91a697d4245fb6cf0c" kindref="member">S_MINUS</ref>:</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa32610e28caffb91a697d4245fb6cf0c" kindref="member">S_MINUS</ref><sp/>?<sp/><ref refid="cg_8c_1a9eeb57758ebcdbf47d85d43e12ba76a0" kindref="member">X_SUB</ref><sp/>:<sp/><ref refid="cg_8c_1aa37b882caee86b0f5ec491fd15b9ba70" kindref="member">X_ADD</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a78f2fe04c8d2e52b1488b9f85ac2f7fe" kindref="member">S_EQ</ref>:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a33c544162eea8f966c3bdec29d7c77a8" kindref="member">S_NE</ref>:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a1fd3330d39fc4eebcae5821e92b66598" kindref="member">S_LS</ref>:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a2b552341bfe83ffddd206855c8d716bb" kindref="member">S_GR</ref>:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a196c4ad49ae2e87a6fae7076375f4402" kindref="member">S_LE</ref>:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a8f5f3124892e608ef7c74bf81ac4b8a0" kindref="member">S_GE</ref>:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o2;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1ab4db4524dbf17972053e0e61ed5eeaf4" kindref="member">X_CMP</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o2<sp/>=<sp/><ref refid="cg_8c_1ad66edc94795805afe11b7bd121cd5697" kindref="member">rdop</ref>(1);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o2<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a01fe1e9655e8adecf7c3babb9aefd5ae" kindref="member">S_JT</ref><sp/>||<sp/>o2<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae93e35a28a60c87d989fae1c0e0ffcf2" kindref="member">S_JF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ro<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcode<sp/>=<sp/>op;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;set%s<sp/>%%al&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1ad91e45c32f89b77fd01b45604e752341" kindref="member">relstr</ref>[op<sp/>-<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a78f2fe04c8d2e52b1488b9f85ac2f7fe" kindref="member">S_EQ</ref>][1]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;movzx<sp/>%%al,%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;neg<sp/>%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac22d82662e0ff9a1fbabd92f72de4996" kindref="member">S_LSHIFT</ref>:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a56464d161402eb08aabc5552f5099150" kindref="member">S_RSHIFT</ref>:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;sh%cl<sp/>%%cl,%%eax&quot;</highlight><highlight class="normal">,<sp/>op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a56464d161402eb08aabc5552f5099150" kindref="member">S_RSHIFT</ref><sp/>?<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ab6175d153db4d2ec96a3ce5240b644cf" kindref="member">S_LOGAND</ref>:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a8ebdb8177a8ae90e46dff6a4a5b840f1" kindref="member">S_LOGOR</ref>:</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a8ebdb8177a8ae90e46dff6a4a5b840f1" kindref="member">S_LOGOR</ref><sp/>?<sp/><ref refid="cg_8c_1a91c2585f971ab42f4e989cfd0d91d4a2" kindref="member">X_OR</ref><sp/>:<sp/><ref refid="cg_8c_1a54a95c2322f757d51b2abc6adac695ac" kindref="member">X_AND</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2abc5748e7c7bc97c9d0b1e112ac2731d9" kindref="member">S_EQV</ref>:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aac99459530c763b2e72f8a5188c31782" kindref="member">S_NEQV</ref>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2abc5748e7c7bc97c9d0b1e112ac2731d9" kindref="member">S_EQV</ref>)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;xorl<sp/>$-1,%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1a31d9eaa243153a094aec0ade93c84a7c" kindref="member">X_XOR</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a978e83eb525cec05f735b462494d36c2" kindref="member">S_GETBYTE</ref>:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae8a71542cb05fa1c29e166402442cef4" kindref="member">S_PUTBYTE</ref>:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;shl<sp/>$%d,%%eax&quot;</highlight><highlight class="normal">,<sp/>WORD_SHIFT);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1aa37b882caee86b0f5ec491fd15b9ba70" kindref="member">X_ADD</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a978e83eb525cec05f735b462494d36c2" kindref="member">S_GETBYTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;movzb<sp/>(%%rax),%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;movzb<sp/>(%%eax),%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>,<sp/>1,<sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>-<sp/>3);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%cl,(%%rax)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%cl,(%%eax)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref>--;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a89dcbf099fa46617ccb1b3b6755ddb53" kindref="member">S_STIND</ref>:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%eax,(,%%rcx,%d)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%eax,(,%%ecx,%d)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a7baf990810b336be711b13f1578eeaaf" kindref="member">S_GOTO</ref>:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1abe64a2f2baec92df0ff56d9d8a832ac5" kindref="member">X_JMP</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a01fe1e9655e8adecf7c3babb9aefd5ae" kindref="member">S_JT</ref>:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae93e35a28a60c87d989fae1c0e0ffcf2" kindref="member">S_JF</ref>:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ro)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;j%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1ad91e45c32f89b77fd01b45604e752341" kindref="member">relstr</ref>[rcode<sp/>-<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a78f2fe04c8d2e52b1488b9f85ac2f7fe" kindref="member">S_EQ</ref>][op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a01fe1e9655e8adecf7c3babb9aefd5ae" kindref="member">S_JT</ref>],<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ro<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;orl<sp/>%%eax,%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;j%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae93e35a28a60c87d989fae1c0e0ffcf2" kindref="member">S_JF</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;nz&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a0b232e8ca907492eeca61af964b3662e" kindref="member">S_JUMP</ref>:</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jmp<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a17a3bf3b8e491d16ec77b7fe28e78806" kindref="member">S_SWITCHON</ref>:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>d,<sp/>l,<sp/>i;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>--<ref refid="cg_8c_1a4948e3f6b049ad5b3790dcc1a4421685" kindref="member">labno</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a19939ebe56152ac25b56f7ec3f124d83" kindref="member">S_DATALAB</ref>,<sp/>l);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a3d7935bd73c07c22528f4f3e43e143e5" kindref="member">S_ITEMN</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(<ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a88b95186baf642dac8325277d101804f" kindref="member">S_ITEML</ref>,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>$%s,%%rdx&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(l));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>$%d,%%rcx&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>$%s,%%edx&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(l));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>$%d,%%ecx&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jecxz<sp/>2f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;1:cmp<sp/>(%%rdx),%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;1:cmp<sp/>(%%edx),%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;je<sp/>3f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;add<sp/>$8,%%rdx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;add<sp/>$8,%%edx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;loop<sp/>1b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;2:jmp<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(d));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;3:jmp<sp/>*%d(%%rdx)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);<sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;3:jmp<sp/>*%d(%%edx)&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a02764266298970f3d4e60ac6c769be23" kindref="member">S_RES</ref>:</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jmp<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a80856e372853e84b5c21526b42d604ae" kindref="member">S_RSTACK</ref>:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>=<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a1e16e0eab473aa07ad290083d72ed891" kindref="member">S_FNAP</ref>:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ae5c9b9fe1ee4d1c396f204f9cce0cb2a" kindref="member">S_RTAP</ref>:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1aeafe4bc22aabd73aacdc9d476d7dfc73" kindref="member">X_LEA</ref>,<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>,<sp/>1,<sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/>sn);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1af3e63f75092628b5f72bd834f1f964cd" kindref="member">X_CALL</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a1e16e0eab473aa07ad290083d72ed891" kindref="member">S_FNAP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>=<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a6dc17fd37cb546efe4684179dde0098e" kindref="member">S_FNRN</ref>:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2aa0082239e9d6c8df802da1cbeb343530" kindref="member">S_RTRN</ref>:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%rbp,%%rcx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%d(%%rcx),%%eax&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%eax,%%ebp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>(%%rcx),%%eax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jmp<sp/>*%%rax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%ebp,%%ecx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%d(%%ecx),%%ebp&quot;</highlight><highlight class="normal">,<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jmp<sp/>*(%%ecx)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a236c1cf5aba4e9fe6c2281bfc63635b6" kindref="member">S_ENDFOR</ref>:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(<ref refid="cg_8c_1ab4db4524dbf17972053e0e61ed5eeaf4" kindref="member">X_CMP</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jle<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ade7e31c90f3fad9b49aae7dfde4e5418" kindref="member">S_BLAB</ref>:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2add7056b44f4e2f374b7215f630e5b358" kindref="member">S_LAB</ref>:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" kindref="member">codelab</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a19939ebe56152ac25b56f7ec3f124d83" kindref="member">S_DATALAB</ref>:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a88b95186baf642dac8325277d101804f" kindref="member">S_ITEML</ref>:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a3d7935bd73c07c22528f4f3e43e143e5" kindref="member">S_ITEMN</ref>:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(op,<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac4dda0b13bd3d88c9cb0d37cb289ee9a" kindref="member">S_NEEDS</ref>:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ada73e9a7184ddbe9df5136844aa5be79" kindref="member">S_SECTION</ref>:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>i;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;//\t%s:<sp/>&quot;</highlight><highlight class="normal">,<sp/>op<sp/>==<sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac4dda0b13bd3d88c9cb0d37cb289ee9a" kindref="member">S_NEEDS</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;NEEDS&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;SECTION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a32764092d14740914081f3bc5a999b80" kindref="member">S_GLOBAL</ref>:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>x,<sp/>i;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;ret&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1ae8a4c6c633c5aeee881b57edb23ab28f" kindref="member">outdata</ref>(<ref refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" kindref="member">sdata</ref>[i][0],<sp/><ref refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" kindref="member">sdata</ref>[i][1]);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.global<sp/>G%d&quot;</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.equ<sp/>G%d,%s&quot;</highlight><highlight class="normal">,<sp/>x,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(<ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>()));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>code<sp/>stream:<sp/>return<sp/>for<sp/>next<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a93dbd7e7f36df21b1d9ea359d1497415" kindref="member">S_FINISH</ref>:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;jmp<sp/>finish&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>op<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>op);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>stack<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>=<sp/>s2<sp/>&amp;<sp/>2<sp/>?<sp/>sn<sp/>:<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>-<sp/>s1;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref>++;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>load<sp/>stack<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>&lt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>=<sp/>s2<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s3<sp/>==<sp/>8<sp/>&amp;&amp;<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref>++;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a6a737fa2f466f06955a5d3bf7d6658c1" kindref="member">load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>&lt;=<sp/>2);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af21ecd62042167181d3471b14db0b404" kindref="member">force</ref>(1);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref>]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref>]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="cg_8c_1acf58c67442fc1637dc709535437c487e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1acf58c67442fc1637dc709535437c487e" kindref="member">save</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/>k,<sp/>v,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="cg_8c_1af21ecd62042167181d3471b14db0b404" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1af21ecd62042167181d3471b14db0b404" kindref="member">force</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>&lt;=<sp/>2);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(st<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>st<sp/>&lt;=<sp/>2);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>==<sp/>st)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>=<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0],<sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>==<sp/>st)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>==<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref><sp/>&amp;&amp;<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%eax,%%ecx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0],<sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[1]<sp/>=<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" kindref="member">loadreg</ref>(0,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>!=<sp/><ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(<ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>,<sp/><ref refid="cg_8c_1a024603cda52d9847e8d8df3c2e884b8c" kindref="member">sp</ref><sp/>-<sp/><ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref>,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0]<sp/>=<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[1];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0]<sp/>=<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[1]<sp/>==<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref><sp/>?<sp/>0<sp/>:<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[1];</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--<ref refid="cg_8c_1a3eec33a4e6d8295c25d117bb25dd1b9b" kindref="member">lp</ref><sp/>!=<sp/>st);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ad0481ab2d85c2b9e3ad51ec318d6ac8c" kindref="member">loadreg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>must)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/>p;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[i];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>t<sp/>==<sp/><ref refid="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" kindref="member">X_LP</ref><sp/>||<sp/>t<sp/>==<sp/><ref refid="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" kindref="member">X_LG</ref><sp/>||<sp/>t<sp/>==<sp/><ref refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" kindref="member">X_LL</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>||<sp/>must)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(p<sp/>&amp;&amp;<sp/>t<sp/>!=<sp/><ref refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" kindref="member">X_LL</ref><sp/>?<sp/><ref refid="cg_8c_1aeafe4bc22aabd73aacdc9d476d7dfc73" kindref="member">X_LEA</ref><sp/>:<sp/><ref refid="cg_8c_1a418eafc0e0d9806da83296e2c9e30864" kindref="member">X_MOV</ref>,<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>,<sp/>i,<sp/>t,<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[i]);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;shr<sp/>$%d,%%%s&quot;</highlight><highlight class="normal">,<sp/>WORD_SHIFT,<sp/><ref refid="cg_8c_1a82052e9f99a96a2fe1ae7215e4ce2b6f" kindref="member">reg</ref>[i]);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[i]<sp/>=<sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a83aeae3c75b044afd1d7677eba31f6cd" kindref="member">codex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(xi,<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[0],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[0],<sp/><ref refid="cg_8c_1a99f341304834c60324b5add106416b9e" kindref="member">ltype</ref>[1],<sp/><ref refid="cg_8c_1af749a7f6ec5c67ab4fccdbfd37ae323c" kindref="member">ldata</ref>[1]);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a264145a676c969ab970618081c7ccb9f" kindref="member">code</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi,<sp/>...)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>64-byte<sp/>buffer<sp/>easily<sp/>accommodates<sp/>the<sp/>longest<sp/>formatted</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>instruction<sp/>which<sp/>is<sp/>well<sp/>under<sp/>32<sp/>characters.</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64],<sp/>*s;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rem<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ[2],<sp/>dat[2];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cj,<sp/>i1,<sp/>na,<sp/>x,<sp/>i,<sp/>t,<sp/>d;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>xi);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="cg_8c_1a8e6479a37acf53f5674fcdd0e7367a0e" kindref="member">xitab</ref>[xi];</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>cj<sp/>=<sp/>x<sp/>&amp;<sp/><ref refid="cg_8c_1ae213e4ea1a0d4ad389f48c5ed61bd46b" kindref="member">XCJ</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>x<sp/>&amp;<sp/><ref refid="cg_8c_1a40c02ec10cdf579497a0d2ce45155d90" kindref="member">XI1</ref><sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>na<sp/>=<sp/>x<sp/>&amp;<sp/><ref refid="cg_8c_1a40049f5c914c456a58240b7a09f04853" kindref="member">XNA</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>na;<sp/>i++)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typ[i]<sp/>=<sp/>va_arg(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[i]<sp/>=<sp/>va_arg(ap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1a2a2ea7ed355dba3501d63e7f63227149" kindref="member">xistr</ref>[xi]);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>na<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>i1;<sp/>i--)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;instruction<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s++<sp/>=<sp/>i<sp/>==<sp/>na<sp/>-<sp/>1<sp/>?<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem--;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>typ[i];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>dat[i];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cj)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;instruction<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem--;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/><ref refid="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" kindref="member">X_LP</ref><sp/>&amp;&amp;<sp/>t<sp/>!=<sp/><ref refid="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" kindref="member">X_LG</ref><sp/>&amp;&amp;<sp/>!cj)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;instruction<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem--;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a383172054f1e95fcaebed559c26dff3d" kindref="member">X_R</ref>:</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%%%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1a82052e9f99a96a2fe1ae7215e4ce2b6f" kindref="member">reg</ref>[d]);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1aa6c17276be11177a7c38ef0a551c1f8f" kindref="member">X_P</ref>:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1afcb72117cb790ee4136c1c2b3bb70e60" kindref="member">X_LP</ref>:</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%d(%%rbp)&quot;</highlight><highlight class="normal">,<sp/>d<sp/>*<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%d(%%ebp)&quot;</highlight><highlight class="normal">,<sp/>d<sp/>*<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1afc65e8a229eb1de0086ae2f620b9f96d" kindref="member">X_G</ref>:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a3dd05c586a95d85f3ea936e4527c115f" kindref="member">X_LG</ref>:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS==64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%d(%%rdi)&quot;</highlight><highlight class="normal">,<sp/>d<sp/>*<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%d(%%edi)&quot;</highlight><highlight class="normal">,<sp/>d<sp/>*<sp/>WORDSZ);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a48926cc43021b1ff1b5fcdf5550651de" kindref="member">X_L</ref>:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a3e3cd605f7ec519b8b9e6b5d3730eda7" kindref="member">X_LL</ref>:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(d));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1aea2975868b5e5bee069fca958f13dca9" kindref="member">X_N</ref>:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1aee86a0064eaebd81d629dbcccfd08622" kindref="member">buf_append</ref>(&amp;s,<sp/>&amp;rem,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>d);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1aa9646e1bdfa9f5b59f8f460cb0503819" kindref="member">defdata</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref><sp/>&gt;=<sp/><ref refid="cg_8c_1a6aa9342e04c8980caca9b807953febfd" kindref="member">SDSZ</ref>)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>constants&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" kindref="member">sdata</ref>[<ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref>][0]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a6bd4f1e907d2e51115ac10773b6ff56a" kindref="member">sdata</ref>[<ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref>][1]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a8e935675ee83a2516c575de3e892b12e" kindref="member">dt</ref>++;</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="cg_8c_1ae8a4c6c633c5aeee881b57edb23ab28f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ae8a4c6c633c5aeee881b57edb23ab28f" kindref="member">outdata</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(k)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a19939ebe56152ac25b56f7ec3f124d83" kindref="member">S_DATALAB</ref>:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.align<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" kindref="member">codelab</ref>(n);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a3d7935bd73c07c22528f4f3e43e143e5" kindref="member">S_ITEMN</ref>:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.long<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2a88b95186baf642dac8325277d101804f" kindref="member">S_ITEML</ref>:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.long<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(n));</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="oc_8h_1a3313a37bfa8f0101c193281a70b362a2ac29d80754ddd534a99ab4fb1fea02393" kindref="member">S_LSTR</ref>:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="stringliteral">&quot;.byte<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a288faa6ee45c25ebc4a7482ecd046eb9" kindref="member">codelab</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[32];</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s:&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(n))<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf))<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;label<sp/>buffer<sp/>overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(buf);</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a27e36182e31115cecdef3b3fe3a47c79" kindref="member">emit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isupper(*fmt)<sp/>||<sp/>isdigit(*fmt)<sp/>||<sp/>*fmt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(*fmt++);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fmt)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vprintf(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cg_8c_1aa1db0407d62c466c598725e94beb36b6" kindref="member">label</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[32];</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;L%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="cg_8c_1ad6861c9d91887cb2618496f9e6ef1600" kindref="member">loff</ref><sp/>+<sp/>n)<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf))<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;label<sp/>buffer<sp/>overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="cg_8c_1ad66edc94795805afe11b7bd121cd5697" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1ad66edc94795805afe11b7bd121cd5697" kindref="member">rdop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peek)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>got,<sp/>op;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!got)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>got<sp/>=<sp/>peek;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op;</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965" refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a8ae9434834f468927f4a922178c9e3fd" kindref="member">rdn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>neg;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>neg<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>=<sp/>getchar();</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>=<sp/>getchar();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neg<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>=<sp/>getchar();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isdigit(<ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref>))</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n<sp/>*<sp/>10<sp/>+<sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cg_8c_1a30df446d01f80e4211b2fcef8f754436" kindref="member">ch</ref><sp/>=<sp/>getchar();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>neg<sp/>?<sp/>-n<sp/>:<sp/>n;</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" refkind="member"><highlight class="normal">[[noreturn]]<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cg_8c_1a012a8d8c5ec50aba9e8d09717158c260" kindref="member">error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msg);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>vfprintf(stderr,<sp/>msg,<sp/>ap);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>fputc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>stderr);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/cg.c"/>
  </compounddef>
</doxygen>
