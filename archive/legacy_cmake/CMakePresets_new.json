{
    "version": 3,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 20,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "default",
            "displayName": "Default Configuration",
            "description": "Default build using auto-detected architecture",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/default",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_TARGET_ARCH": "auto",
                "BCPL_OPTIMIZE_FOR_ARCH": "ON"
            }
        },
        {
            "name": "debug",
            "displayName": "Debug Build",
            "description": "Debug build with sanitizers",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "BCPL_TARGET_ARCH": "auto",
                "ENABLE_ASAN": "ON",
                "ENABLE_UBSAN": "ON"
            }
        },
        {
            "name": "arm64",
            "displayName": "ARM64 Build",
            "description": "ARM64 specific build",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/arm64",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_TARGET_ARCH": "arm64",
                "BCPL_ENABLE_ARM64": "ON",
                "BCPL_OPTIMIZE_FOR_ARCH": "ON"
            },
            "condition": {
                "type": "anyOf",
                "conditions": [
                    {
                        "type": "matches",
                        "string": "${hostSystemName}",
                        "regex": "Darwin"
                    },
                    {
                        "type": "matches",
                        "string": "${hostSystemName}",
                        "regex": "Linux"
                    }
                ]
            }
        },
        {
            "name": "x86_64",
            "displayName": "x86_64 Build",
            "description": "x86_64 specific build",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/x86_64",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_TARGET_ARCH": "x86_64",
                "BCPL_ENABLE_X86_64": "ON",
                "BCPL_OPTIMIZE_FOR_ARCH": "ON"
            }
        },
        {
            "name": "universal",
            "displayName": "Universal Binary (macOS)",
            "description": "Universal Binary for macOS (ARM64 + x86_64)",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/universal",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_ENABLE_UNIVERSAL_BINARY": "ON",
                "BCPL_ENABLE_ARM64": "ON",
                "BCPL_ENABLE_X86_64": "ON",
                "BCPL_OPTIMIZE_FOR_ARCH": "ON"
            },
            "condition": {
                "type": "matches",
                "string": "${hostSystemName}",
                "regex": "Darwin"
            }
        },
        {
            "name": "cross-arm32",
            "displayName": "Cross-compile ARM32",
            "description": "Cross-compilation for ARM32",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/cross-arm32",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_TARGET_ARCH": "arm32",
                "BCPL_ENABLE_ARM32": "ON",
                "BCPL_ENABLE_CROSS_COMPILE": "ON"
            },
            "condition": {
                "type": "matches",
                "string": "${hostSystemName}",
                "regex": "Linux"
            }
        },
        {
            "name": "development",
            "displayName": "Development Build",
            "description": "Development build with all analysis tools",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/dev",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "BCPL_TARGET_ARCH": "auto",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
                "ENABLE_CLANG_TIDY": "ON",
                "ENABLE_ASAN": "ON",
                "ENABLE_UBSAN": "ON",
                "ENABLE_COVERAGE": "ON"
            }
        },
        {
            "name": "performance",
            "displayName": "Performance Build",
            "description": "Maximum performance build",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/performance",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "BCPL_TARGET_ARCH": "auto",
                "BCPL_OPTIMIZE_FOR_ARCH": "ON",
                "BCPL_USE_NATIVE_INSTRUCTIONS": "ON",
                "ENABLE_THIN_LTO": "ON",
                "ENABLE_PGO": "ON"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "default",
            "configurePreset": "default"
        },
        {
            "name": "debug",
            "configurePreset": "debug"
        },
        {
            "name": "arm64",
            "configurePreset": "arm64"
        },
        {
            "name": "x86_64",
            "configurePreset": "x86_64"
        },
        {
            "name": "universal",
            "configurePreset": "universal"
        },
        {
            "name": "development",
            "configurePreset": "development"
        },
        {
            "name": "performance",
            "configurePreset": "performance"
        }
    ],
    "testPresets": [
        {
            "name": "default",
            "configurePreset": "default",
            "output": {
                "outputOnFailure": true
            }
        },
        {
            "name": "debug",
            "configurePreset": "debug",
            "output": {
                "outputOnFailure": true
            }
        }
    ]
}
